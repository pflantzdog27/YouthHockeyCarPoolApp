{"ast":null,"code":"var _jsxFileName = \"/Users/tanyapflantzer/Desktop/Adam_Stuff/youth-hockey-carpool-frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n  const navigate = useNavigate();\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n\n      // Save the JWT token to localStorage\n      localStorage.setItem('token', response.data.token);\n\n      // Decode the JWT to extract the user ID\n      const decodedToken = JSON.parse(atob(response.data.token.split('.')[1]));\n      localStorage.setItem('user_id', decodedToken.user.id);\n\n      // Navigate to the home page\n      navigate('/');\n    } catch (err) {\n      console.error('Error logging in:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rMp78YZBWNTZeFnLKGK54TI8qxs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","navigate","onChange","e","target","name","value","handleLogin","preventDefault","response","post","localStorage","setItem","data","token","decodedToken","JSON","parse","atob","split","user","id","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","required","_c","$RefreshReg$"],"sources":["/Users/tanyapflantzer/Desktop/Adam_Stuff/youth-hockey-carpool-frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../utils/api';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = formData;\n  const navigate = useNavigate();\n\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/api/auth/login', { email, password });\n      \n      // Save the JWT token to localStorage\n      localStorage.setItem('token', response.data.token);\n      \n      // Decode the JWT to extract the user ID\n      const decodedToken = JSON.parse(atob(response.data.token.split('.')[1]));\n      localStorage.setItem('user_id', decodedToken.user.id);\n\n      // Navigate to the home page\n      navigate('/');\n    } catch (err) {\n      console.error('Error logging in:', err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" value={email} onChange={onChange} required />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={password} onChange={onChange} required />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM;IAAED,KAAK;IAAEC;EAAS,CAAC,GAAGH,QAAQ;EACpC,MAAMI,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,QAAQ,GAAIC,CAAC,IAAKL,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAErF,MAAMC,WAAW,GAAG,MAAOJ,CAAC,IAAK;IAC/BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,iBAAiB,EAAE;QAAEX,KAAK;QAAEC;MAAS,CAAC,CAAC;;MAEvE;MACAW,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;;MAElD;MACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxER,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEG,YAAY,CAACK,IAAI,CAACC,EAAE,CAAC;;MAErD;MACApB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;IACzC;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnC,OAAA;MAAMoC,QAAQ,EAAEvB,WAAY;MAAAkB,QAAA,gBAC1B/B,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBnC,OAAA;UAAOqC,IAAI,EAAC,OAAO;UAAC1B,IAAI,EAAC,OAAO;UAACC,KAAK,EAAEP,KAAM;UAACG,QAAQ,EAAEA,QAAS;UAAC8B,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eACNnC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAA+B,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBnC,OAAA;UAAOqC,IAAI,EAAC,UAAU;UAAC1B,IAAI,EAAC,UAAU;UAACC,KAAK,EAAEN,QAAS;UAACE,QAAQ,EAAEA,QAAS;UAAC8B,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACNnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7CID,KAAK;EAAA,QAMQJ,WAAW;AAAA;AAAA0C,EAAA,GANxBtC,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}